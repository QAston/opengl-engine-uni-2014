ŁADOWANIE OBJ:
ma działać na vbo (vertex buffer object) lub na tablicach wierzchołków
ładowanie materiałów
eksport wektorów normalnych i współrzędnych tekstur
w samym obj nie ma materiałów, są identyfikatory materiałów
nazwa materiału definiuje teksturę
nie trzeba parsować pliku .mtl
nazwa tekstury to nazwa materiału

można wyeksportować kostkę, żeby zobaczyć jak wygląda struktura pliku
jedyna trudność jest taka, że przy vbo zakładana jest taka sama długość atrybutów, a
w obj są np. 3 listy o różnej długości

będzie można stosować jeden indeks dla wszystkich list
oddać za dwa tygodnie

FPS:

Kamera fpsowa - WSAD + mysz
mozna dorobic wznoszenie

gluLookAt - ocena nizej
sin/cos - ocena nizej

tylko wylacznie na macierzach - 5

Mv = Wc ^-1* Wo
ModelView
Wo - macierz swiatowa obiektu zlozenia przeksztalcen elem. orientujacych obiekt

Wo = To * Rox *Roy
Wc - macierz swiatowa kamery
Wc = Tc*Rcx*Rcy
V = Wc^-1 = Rcx^t*Rcy^t*Tc^-1
Nie trzeba uzywac wzorow sinusowych, wektory kierunkowe sa kolumnami macierzy swiatowej


STARE:

Podstawowe tryby wyświetlania
Dźwięk przestrzenny openal

Aplikacja ma robić 2 rzeczy:
 Wyświetlać dowolny obiekt - wygenerować geometrię obiektu z biblioteki glut
Po naciśnięciu spacji obiekt ma wydawać dźwięk
Przy użyciu strzałek obiekt ma się przesuwac lewo prawo gora dol
Kamera ma się nie ruszać

Wyswietlanie 2 tryby:
     cieniowanie goranda - wierzchołki o losowych kolorach
     na 5+ tekstury

Oddać 8.04.2014


Kompilacja na linuksie:
g++ main.cpp -lGL -lGLU -lglut -lalut -lopenal -lpng -std=c++11

Użyte biblioteki na linuksie:
freealut 1.1.0
freeglut 2.8.1
openal-soft 1.15.1
libpng 1.6.3
